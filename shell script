// prime number or not

#!/bin/bash
echo -e "Enter Number : \c"
read n
while [ $n -gt 2 ]
do
for((i=2; i<=$n/2; i++))
do
  ans=$(( n%i ))
  if [ $ans -eq 0 ]
  then
    echo "$n is not a prime number."
    exit 0
  fi
done
done
echo "$n is a prime number."

// half pyramid
rows=5
for((i=rows; i>=1; i--))
do
  for((j=1; j<=i; j++))
  do
    echo -n "* "
  done
  echo
done

// factorial in unix

echo "Enter a number"
read num

fact=1

while [ $num -gt 1 ]
do
  fact=$((fact * num))  #fact = fact * num
  num=$((num - 1))      #num = num - 1
done

// transpose matrix

#!/bin/bash
matrix1=(1 2 3 4 5 6 7 8 9)
rows=3
cols=3
echo "Matrix"
for((i=0; i<rows; i++))
do
  for((j=0; j<cols; j++))
  do
    index=$((i*cols+j))
    echo -n "${matrix1[index]} "
  done
  echo
done
 
for((i=0; i<rows; i++))
do
  for((j=i+1; j<cols; j++))
  do
    index1=$((rows*i + j))
    index2=$((rows*j + i))
    temp=${matrix1[index1]}
    matrix1[index1]=${matrix1[index2]}
    matrix1[index2]=$temp
  done
done
 
echo "Transpose of a matrix"
for((i=0; i<rows; i++))
do
  for((j=0; j<cols; j++))
  do
    index=$((i*cols+j))
    echo -n "${matrix1[index]} "
  done
  echo
done


// palingdrom


#!/bin/bash
echo enter n
read n
num=0
on=$n
while [ $n -gt 0 ]
do
num=$(expr $num \* 10)
k=$(expr $n % 10)
num=$(expr $num + $k)
n=$(expr $n / 10)
done
if [ $num -eq $on ]
then
echo palindrome
else
echo not palindrome
fi


// sum of digits

#!/bin/bash
echo "Enter a number"
read num

sum=0

while [ $num -gt 0 ]
do
    mod=$((num % 10))   
    sum=$((sum + mod))  
    num=$((num / 10))   
done

echo $sum
